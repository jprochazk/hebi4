---
source: src/token/tests.rs
expression: snapshot
---
SOURCE
//tokenize

let
fn
do
loop
return
break
continue
if
else

({[]})

.,

= += -= *= /=
+ - * /

or and not

== != > >= < <=

_abcdefghijklmnopqrstuvwxyz_ABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789_

0 123456789 1_0

0.0 123456789.123456789 1e100 1.1e100 1.1e-100 1.1e+100

"asdf" "\n" "\t" "\x00" "\u{0000}"

"\""

true false nil

// comments
//! comments


TOKENS
[
    Let("let", 12..15),
    Fn("fn", 16..18),
    Do("do", 19..21),
    Loop("loop", 22..26),
    Return("return", 27..33),
    Break("break", 34..39),
    Continue("continue", 40..48),
    If("if", 49..51),
    Else("else", 52..56),
    ParenL("(", 58..59),
    BraceL("{", 59..60),
    BracketL("[", 60..61),
    BracketR("]", 61..62),
    BraceR("}", 62..63),
    ParenR(")", 63..64),
    Dot(".", 66..67),
    Comma(",", 67..68),
    Eq("=", 70..71),
    PlusEq("+=", 72..74),
    MinusEq("-=", 75..77),
    StarEq("*=", 78..80),
    SlashEq("/=", 81..83),
    Plus("+", 84..85),
    Minus("-", 86..87),
    Star("*", 88..89),
    Slash("/", 90..91),
    Or("or", 93..95),
    And("and", 96..99),
    Not("not", 100..103),
    EqEq("==", 105..107),
    NotEq("!=", 108..110),
    Gt(">", 111..112),
    Ge(">=", 113..115),
    Lt("<", 116..117),
    Le("<=", 118..120),
    Ident("_abcdefghijklmnopqrstuvwxyz_ABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789_", 122..188),
    Integer("0", 190..191),
    Integer("123456789", 192..201),
    Integer("1_0", 202..205),
    Float("0.0", 207..210),
    Float("123456789.123456789", 211..230),
    Float("1e100", 231..236),
    Float("1.1e100", 237..244),
    Float("1.1e-100", 245..253),
    Float("1.1e+100", 254..262),
    String("\"asdf\"", 264..270),
    String("\"\\n\"", 271..275),
    String("\"\\t\"", 276..280),
    String("\"\\x00\"", 281..287),
    String("\"\\u{0000}\"", 288..298),
    String("\"\\\"\"", 300..304),
    True("true", 306..310),
    False("false", 311..316),
    Nil("nil", 317..320),
]
